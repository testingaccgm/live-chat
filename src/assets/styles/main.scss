// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$live-chat-primary: mat.define-palette(mat.$indigo-palette);
$live-chat-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$live-chat-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$live-chat-theme: mat.define-light-theme((
  color: (
    primary: $live-chat-primary,
    accent: $live-chat-accent,
    warn: $live-chat-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($live-chat-theme);

@import './mixins/fonts';
@import './variables/colors';
@import './variables/themes';
@import './mixins/hovers';
@import './mixins/shortand';
@import './mixins/media';

* {
  margin: 0;
  padding: 0;
  font-size: 15px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  @include rubik;
}

body {
  min-width: 320px;
  background-color: var(--color1);
  @include scrollbar (body);
}

::selection {
  background: $yellow;
  color: $black;
}

.container {
  max-width: 1920px;
  margin: 0 auto;
}

img {
  user-select: none;
}

.error-msg {
  color: $red;
  font-size: 1.1em;
  padding: 10px 0 0 0;
  list-style: none;
}

input.ng-invalid.ng-touched,
.invalid {
  border: 2px solid $red !important;
}

.btn-default {
  background-color: $yellow;
  width: 100%;
  height: 50px;
  color: $white;
  font-size: 1.1em;
  transition: all 0.5s ease;
  @include btn;
  &:disabled {
    cursor: not-allowed;
  }
  @include hover(normal) {
    background-color: darken($yellow, 10%);
  }
  @include media(med) {
    width: 190px;
  }
}

.narrow-btn {
  width: auto !important;
  height: auto;
  line-height: 1.1em;
  padding: 5px;
}

button:disabled {
  cursor: not-allowed;
}